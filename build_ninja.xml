<?xml version="1.0" encoding="UTF-8" ?>
<project name="FortesRH" basedir=".." default="init">
	
	<property file="${ant.project.name}/build.properties" />

	<property environment="env"/>
	<property name="class_dir" value="${ant.project.name}/web/WEB-INF/classes" />
	
	<target name="babau">
		<echo>${ant.project.name}</echo>
	</target>

	<path id="project.classpath">
		<pathelement location="${class_dir}" />
		<fileset dir="${ant.project.name}/web/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${ant.project.name}/extras">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${ant.project.name}/web/WEB-INF/lib/backup">
			<include name="*.jar" />
		</fileset>
   	</path>

	<path id="project.classpath.ireport">
		<pathelement location="${ant.project.name}/web/WEB-INF/classes" />
		<fileset dir="${env.JASPER_LIB}">  
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="init" depends="jasper, war">
		<mkdir dir="${ant.project.name}/dist" />
		<copy file="${metadados.dir}/update.sql" todir="${ant.project.name}/dist" />
		<delete file="${ant.project.name}/dist/update.sql" />
		<antcall target="build_atualizador"></antcall>
	</target>

	<target name="jasper" depends="clean-reports">
		<taskdef name="jaspercompile" classname="net.sf.jasperreports.ant.JRAntCompileTask">
			<classpath refid="project.classpath.ireport"/>
		</taskdef>
		
		<jaspercompile destdir="${ant.project.name}/web/WEB-INF/report">
			<src>
				<fileset dir="${ant.project.name}/web/WEB-INF/report">
					<include name="*.jrxml" />
	                <date datetime="${vinteDiasAtras} 01:00 AM" when="after"/>
				</fileset>
			</src>
		</jaspercompile>
	</target>
	
	<target name="clean-reports">
		<taskdef resource="net/sf/antcontrib/antlib.xml">  
	        <classpath>  
	            <pathelement location="${ant.project.name}/web/WEB-INF/lib/backup/ant-contrib-1.0b3.jar"/>  
	        </classpath>  
		</taskdef> 
		
		<tstamp>
	        <format property="vinteDiasAtras" pattern="MM/dd/yyyy" offset="-20" unit="day"/>
	    </tstamp>

		<for param="jrxml.file">  
            <fileset dir="${ant.project.name}/web/WEB-INF/report">
                <include name="*.jrxml" />
                <date datetime="${vinteDiasAtras} 01:00 AM" when="after"/>
            </fileset>	       
			<sequential>  
			    <propertyregex override="yes" property="jasper.file"  input="@{jrxml.file}" regexp=".jrxml" replace=".jasper"/>
				<delete file="${jasper.file}"/>
	        </sequential>  
	    </for> 
	</target>
	
	<target name="compiler">
		<mkdir dir="${class_dir}" />
		<delete includeemptydirs="true">
			<fileset dir="${class_dir}" includes="**/*/**" />
		</delete>

		<javac debug="on" encoding="UTF-8" srcdir="${src.dir}" destdir="${class_dir}" failonerror="true"
			source="1.5" target="1.5">
			<classpath refid="project.classpath" />
		</javac>
		<javac debug="on" encoding="UTF-8" srcdir="${srcTeste.dir}" destdir="${class_dir}" failonerror="true"
			source="1.5" target="1.5">
			<classpath refid="project.classpath" />
		</javac>

		<antcall target="resources"></antcall>
	</target>
	
	<target name="resources">
		<copy todir="${class_dir}" includeEmptyDirs="no">
			<fileset dir="${src.dir}">
				<patternset>
					<exclude name="**/*.java"/>
				</patternset>
			</fileset>
			<fileset dir="${srcTeste.dir}">
				<patternset>
					<exclude name="**/*.java"/>
				</patternset>
			</fileset>
		</copy>
	</target>
	
	<target name="war" depends="compiler, update-file-update-sql">
		
		<mkdir dir="${ant.project.name}/dist" />
		<property name="tmpweb" value="${ant.project.name}/dist/tmpweb" />
		<property name="base" value="${ant.project.name}/web" />
		<property name="lib" value="WEB-INF/lib" />
		<property name="test-ignore" value="WEB-INF/classes/com/fortes/rh/test" />

		<!-- Copia todos os arquivos, com execao das libs, para diretorio temporario -->
		<copy todir="${tmpweb}">
			<fileset dir="${base}">
				<exclude name="WEB-INF/lib/**" />
				<exclude name="WEB-INF/report/*.java" />
				<exclude name="WEB-INF/report/*.bak" />
				<exclude name="WEB-INF/anexosLtcat/*.*" />
				<exclude name="WEB-INF/atualizador/*.*" />
				<exclude name="WEB-INF/temp/*.*" />
				<exclude name="anexos/*.*" />
				<exclude name="backup/*.*" />
				<exclude name="${metadados.dir}/clean.sql"/>
				<exclude name="${metadados.dir}/create_data.sql"/>
				<exclude name="${metadados.dir}/create.sql"/>
				<exclude name="${metadados.dir}/populate.sql"/>
				<exclude name="${metadados.dir}/update_dev.sql"/>
			</fileset>
		</copy>
		<!-- Copia as libs para diretorio temporario -->
		<copy todir="${tmpweb}/${lib}" flatten="true" >
			<fileset dir="${base}/${lib}">
				<exclude name="fortes-ant.jar" />
				<exclude name="pmd-4.2.2.jar" />
				<exclude name="hsqldb.jar" />
				<exclude name="checkstyle-4.4.jar" />
				<exclude name="findbugs/**" />
				<exclude name="findbugs*.jar" />
				<exclude name="emma*.jar" />
				<exclude name="ant-junit.jar" />
				<exclude name="jmock*.jar" />
				<exclude name="classmock_1.0.jar" />
				<exclude name="junit.jar" />
				<exclude name="selenium*.jar" />
				<exclude name="spring-mock.jar" />
				<exclude name="retroweaver-all-2.0.2.jar" />
				<exclude name="args4j-2.0.1.jar" />
				<exclude name="org.crap4j.jar" />
				<exclude name="backup"/>
			</fileset>
		</copy>
		<!-- Gera War file de acordo com o diretorio temporario -->
		<war webxml="${tmpweb}/WEB-INF/web.xml"
			destfile="${ant.project.name}/dist/fortesrh.war" basedir="${tmpweb}"
			excludes="${test-ignore}/**">
		</war>

		<delete dir="${tmpweb}" /> <!--Deleta diretorio temporario -->
		<delete file="${ant.project.name}/dist/create.tmp" />
		<delete file="${ant.project.name}/dist/create.sql" />
		<delete file="${ant.project.name}/dist/create_data.sql" />

		<copy file="${metadados.dir}/create.sql" todir="${ant.project.name}/dist" />
		<copy file="${metadados.dir}/create_data.sql" todir="${ant.project.name}/dist" />

		<concat encoding="UTF-8" outputencoding="UTF-8" destfile="${ant.project.name}/dist/create.tmp">
			<fileset file="${ant.project.name}/dist/create.sql" />
			<fileset file="${ant.project.name}/dist/create_data.sql" />
		</concat>

		<delete file="${ant.project.name}/dist/create.sql" />
		<delete file="${ant.project.name}/dist/create_data.sql" />

		<move file="${ant.project.name}/dist/create.tmp" tofile="${ant.project.name}/dist/create.sql"/>
	</target>
	
	<target name="update-file-update-sql">
		<!-- Solicita Numero da Versao -->
		<input addproperty="versao.atualizador" message="Versao do FortesRH:" />
		
		<exec executable="ruby">
			<arg value="${ant.project.name}/migrate.rb" />
			<arg value="--deploy" />
			<arg value="${versao.atualizador}" />
			<arg value="${ant.project.name}" />
		</exec>
	</target>
	
	<!-- Gera Atualizador -->
	<target name="build_atualizador">
		<ant dir="FortesRH_Atualizador" antfile="gera_atualizador_build.xml">
			<property name="fortesrh.war.file" location="${ant.project.name}/dist/fortesrh.war" /> <!-- Origem -->
			<property name="fortesrh.pack.dir" location="${ant.project.name}/dist" /> <!-- Destino -->
		</ant>
	</target>

	<target name="jar">
		<mkdir dir="${ant.project.name}/dist" />
 		<jar basedir="${class_dir}" jarfile="${ant.project.name}/dist/fortesrh.jar" />
	</target>

</project>